

function setup() {
  createCanvas(600, 600);
} 

function draw() {
	var sunset_Red = 159 - mouseX/100;
  var sunset_Green = 189 - mouseX/100;
  var sunset_Blue = 237 - mouseX /100;
  background(sunset_Red, sunset_Green, sunset_Blue);

  function GetRandomInteger(a, b) 
  {
  return Math.random(b);
  }

var randomInt = GetRandomInteger(1, 255);


  // sun
  var sunMoveX = mouseX/200;
  var sunMoveY = mouseY/200;
  noStroke();
  fill(300,200, 10);
  ellipse(450 - sunMoveX , 60 - sunMoveY ,60);
  
  
  function mountains() {
  
  var horizontalMove = mouseX/50;
  var topMove = mouseY/100;
  var allMountains_Base = 308;
  var topOfMountain_Y = 80 + topMove;
  
  // Mountain 1
  var m1_x1 = -10 - horizontalMove;
  var m1_x2 = 102 - horizontalMove;
  var m1_x3 = 208 - horizontalMove;
  
  
	fill(20, 0 , 50);
  mountain1 =  triangle(m1_x1 , allMountains_Base , m1_x2 , topOfMountain_Y , m1_x3 , allMountains_Base);
  
  // Mountain 2
  var m2_x1 = 147 - horizontalMove;
  var m2_x2 = 252 - horizontalMove;
  var m2_x3 = 358 - horizontalMove;
  

  
  fill(255, 55 ,20);
  mountain2 = triangle(m2_x1 , allMountains_Base , m2_x2 , topOfMountain_Y, m2_x3 ,allMountains_Base);
  
  // Mountain 3
  var m3_x1 = 254 - horizontalMove;
  var m3_x2 = 372 - horizontalMove;
  var m3_x3 = 488 - horizontalMove;
  
  
 
  
  fill(40 , 0 , randomInt);
  mountain3 = triangle(m3_x1 , allMountains_Base , m3_x2 , topOfMountain_Y , m3_x3 , allMountains_Base);
  
  // mountain 4
  var m4_x1 = 381 - horizontalMove;
  var m4_x2 = 502 - horizontalMove;
  var m4_x3 = 638 - horizontalMove;
  var m4_x4 = 208;
  
  
  fill(randomInt,randomInt,200);
  mountain3 = triangle(m4_x1 , allMountains_Base , m4_x2 , topOfMountain_Y , m4_x3 , allMountains_Base);
  
  }
  
  
  
  mountains();
  
  
  function random_rgba() {
    var o = Math.round, r = Math.random, s = 255;
    return 'rgba(' + o(r()*s) + ',' + o(r()*s) + ',' + o(r()*s) + ',' + r().toFixed(1) + ')';
}

var rgbcolor = random_rgba();
 
 
  function mickeyMouse1() {
  
  fill('black');
  ellipse(frameCount/2,250,25,25);
  fill(255,255,255,50,);
  fill(100,100,0,255);
  ellipse(frameCount/2-10,240,20,20);
  fill(100,50,0,255);
  ellipse(frameCount/2+10,240,20,20);
  if (frameCount>=1200)
  {
  	frameCount=0;
  	ellipse(frameCount/2,240,10,50);
  }
  }
  mickeyMouse1();
  
  function mickeyMouse2() {
  
  fill('black');
  ellipse(frameCount/2+20,200+frameCount/15,25,25);
  fill(255,255,255,50,);
  fill(100,100,0,255);
  ellipse(frameCount/2+10,190+frameCount/15,20,20);
  fill(100,50,0,255);
  ellipse(frameCount/2+30,190+frameCount/15,20,20);
  if (frameCount>=1200)
  {
  	frameCount=0;
  	ellipse(frameCount/2,240,10,50);
  }
  }
  mickeyMouse2();
  
  function mickeyMouse3() {
  
  fill( 175 , 20 , 100 );
  ellipse(frameCount/2+20,280-frameCount/15,25,25);
  fill(255,255,255,50,);
  fill(100,100,0,255);
  ellipse(frameCount/2+10,270-frameCount/15,20,20);
  fill(100,50,0,255);
  ellipse(frameCount/2+30,270-frameCount/15,20,20);
  if (frameCount>=1200)
  {
  	frameCount=0;
  	ellipse(frameCount/2,240,10,50);
  }
  }
  mickeyMouse3();

	function ground()
  {
  	var groundMoveY = mouseY/75;
  	noStroke(); 
  	fill(0,100,0);
  	rect(0,300 - groundMoveY, width ,300);
  };
  ground();
  
  
  
  function farTrees(){
		var fartreeMoveX = mouseX/30;
    var fartreeMoveY = mouseY/80;
    // far tree 1
    
  	fill(67, 51, 8); 
    rect(320 - fartreeMoveX, 294 - fartreeMoveY ,10,20); 
    fill(23, 69, 29);
    ellipse(326 - fartreeMoveX, 272 - fartreeMoveY ,20,20);
    ellipse(324 - fartreeMoveX, 292 - fartreeMoveY,30,20);
    ellipse(330 - fartreeMoveX, 282 - fartreeMoveY ,20,20);
    
    // far tree 2
    
    fill(67, 51, 8); 
    rect(220- fartreeMoveX, 294 - fartreeMoveY ,10,20); 
    fill(23, 69, 29);
    ellipse(226-fartreeMoveX, 272 - fartreeMoveY ,20,20);
    ellipse(224- fartreeMoveX, 292 - fartreeMoveY,30,20);
    ellipse(230-fartreeMoveX, 282 - fartreeMoveY ,20,20);
    
    // far tree 3
    
    fill(67, 51, 8); 
    rect(270- fartreeMoveX, 334 - fartreeMoveY ,10,20); 
    fill(23, 69, 29);
    ellipse(276-fartreeMoveX, 312 - fartreeMoveY ,20,20);
    ellipse(274- fartreeMoveX, 332 - fartreeMoveY,30,20);
    ellipse(270-fartreeMoveX, 322 - fartreeMoveY ,20,20);
    translate(-40,-40);
    scale(1.5);
    
	};

	farTrees();

  function semiCloseTrees(){
    
    var semiCloseMoveX = mouseX/20;
    var semiCloseMoveY = mouseY/40;
    
    
    // semi-close tree 1
    
    fill(67, 51, 8); 
    rect(320 - semiCloseMoveX, 294 - semiCloseMoveY , 10, 20); 
    fill(23, 69, 29);
    ellipse(326 - semiCloseMoveX, 292 - semiCloseMoveY , 20,20);
    ellipse(324 - semiCloseMoveX, 272 - semiCloseMoveY ,30,20);
    ellipse(330 - semiCloseMoveX, 282 - semiCloseMoveY ,20,20);
    
    // semi-close tree 2
    
    fill(67, 51, 8); 
    rect(100 - semiCloseMoveX, 294 - semiCloseMoveY , 10, 20); 
    fill(23, 69, 29);
    ellipse(106 - semiCloseMoveX, 292 - semiCloseMoveY , 20,20);
    ellipse(104 - semiCloseMoveX, 272 - semiCloseMoveY ,30,20);
    ellipse(110 - semiCloseMoveX, 282 - semiCloseMoveY ,20,20);
    
    
    
  };
  
  semiCloseTrees();
  
  function veryCloseTrees(){
  	var veryCloseMoveX =  mouseX/10;
    var veryCloseMoveY = mouseY/20;
    
    // very close tree 1
    fill(67, 51, 8);
    rect(170 - veryCloseMoveX, 394 - veryCloseMoveY ,10,20); 
    fill(23, 69, 29);
    ellipse(176 - veryCloseMoveX, 392 - veryCloseMoveY ,20,20);
    ellipse(174 - veryCloseMoveX, 372 - veryCloseMoveY ,30,20);
    ellipse(180 - veryCloseMoveX, 382 - veryCloseMoveY ,20,20);
    
   
    
   	// very close tree 2
    fill(67, 51, 8); 
    rect(220 - veryCloseMoveX, 394 - veryCloseMoveY ,10,20);
    fill(23, 69, 29);
    ellipse(226 - veryCloseMoveX, 392 - veryCloseMoveY ,20,20);
    ellipse(224 - veryCloseMoveX, 372 - veryCloseMoveY ,30,20);
    ellipse(230 - veryCloseMoveX, 382 - veryCloseMoveY ,20,20);
    
  };
  veryCloseTrees();

  
  
  //mouseLocation(); // helpful when mapping out movement ratios
} 

/*
function mouseLocation(){
	translate(20,50);
  scale(0.75);
  fill('black');
  text(("x: " + mouseX),20,10);
  text(("y: " + mouseY),20,20);
} // end mouseLocation
*/
